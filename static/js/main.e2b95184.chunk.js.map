{"version":3,"sources":["Components/ContactListItem/ContactListItem.module.css","redux/actions.js","redux/reducer.js","redux/store.js","apiServices.js","redux/selectors.js","Components/ContactForm/ContactForm.js","redux/operations.js","Components/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/App.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContactsReguests","createAction","addContactsSuccess","addContactsError","deleteContactsReguests","deleteContactsSuccess","deleteContactsError","getContactsReguests","getContactsSuccess","getContactsError","changeFilter","itemsReducer","createReducer","actions","_","payload","state","filter","contact","id","filterReducer","contactsReducer","combineReducers","items","setError","resetError","errorReducer","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contacts","error","devTools","process","axios","defaults","baseURL","addContactsApi","name","number","post","then","data","catch","err","deleteContactsApi","contactId","delete","getContactsFilter","getContactsList","ContactForm","useState","setName","setNumber","dispatch","useDispatch","useSelector","uuidv1","onSubmit","a","contactsAdd","addContacts","handleChange","event","target","value","className","s","form","preventDefault","some","item","toLowerCase","isContactExist","alert","form__label","form__input","type","pattern","title","required","onChange","form__btn","ContactListItem","onDeleteContact","list__item","list__btn","onClick","ContactList","useEffect","get","contactsGet","includes","map","Filter","e","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2b95184.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list__item\":\"ContactListItem_list__item__2XXCl\",\"list__btn\":\"ContactListItem_list__btn__2g9kR\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContactsReguests = createAction('contacts/addRequests');\nexport const addContactsSuccess = createAction('contacts/addSuccess');\nexport const addContactsError = createAction('contacts/addError');\n\nexport const deleteContactsReguests = createAction('contacts/deleteRequests');\nexport const deleteContactsSuccess = createAction('contacts/deleteSuccess');\nexport const deleteContactsError = createAction('contacts/deleteError');\n\nexport const getContactsReguests = createAction('contacts/getRequests');\nexport const getContactsSuccess = createAction('contacts/getSuccess');\nexport const getContactsError = createAction('contacts/getError');\n\nexport const changeFilter = createAction('contacts/FILTER');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './actions';\n\nconst itemsReducer = createReducer([], {\n  [actions.getContactsSuccess]: (_, { payload }) => payload,\n  [actions.addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [actions.deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n\nconst setError = (_, { payload }) => payload;\nconst resetError = () => null;\n\nexport const errorReducer = createReducer(null, {\n  [actions.getContactsReguests]: resetError,\n  [actions.getContactsError]: setError,\n  [actions.addContactsReguests]: resetError,\n  [actions.addContactsError]: setError,\n  [actions.deleteContactsReguests]: resetError,\n  [actions.deleteContactsError]: setError,\n});\n\nexport default contactsReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport logger from 'redux-logger';\nimport contactsReducer from './reducer';\nimport { errorReducer } from './reducer';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    error: errorReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = '  http://localhost:4040';\r\n\r\nexport const addContactsApi = ({ name, number, id }) => {\r\n  return axios\r\n    .post('/contacts', { name, number, id })\r\n    .then(({ data }) => data)\r\n    .catch(err => {\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport const getContactsApi = () => {\r\n  return axios\r\n    .get('/contacts')\r\n    .then(({ data }) => data)\r\n    .catch(err => {\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport const deleteContactsApi = contactId => {\r\n  return axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(({ data }) => data)\r\n    .catch(err => {\r\n      throw err;\r\n    });\r\n};\r\n","export const getContactsFilter = state => state.contacts.filter;\r\nexport const getContactsList = state => state.contacts.items;\r\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v1 as uuidv1 } from 'uuid';\nimport { addContacts } from '../../redux/operations';\nimport { getContactsList } from '../../redux/selectors';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const items = useSelector(getContactsList);\n  const id = uuidv1();\n\n  const onSubmit = () => {\n    dispatch(addContacts({ name, number, id }));\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isContactExist = name => {\n      return items.some(item => item.name.toLowerCase() === name.toLowerCase());\n    };\n    isContactExist(name)\n      ? alert(`${name} is already in contacts.`)\n      : onSubmit(name, number);\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.form__label}>\n        Name\n        <input\n          className={s.form__input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.form__label}>\n        Phone number\n        <input\n          className={s.form__input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n\n      <button className={s.form__btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import {\r\n  addContactsReguests,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsReguests,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  getContactsReguests,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n} from './actions';\r\nimport {\r\n  addContactsApi,\r\n  deleteContactsApi,\r\n  getContactsApi,\r\n} from '../apiServices';\r\n\r\nexport const getContacts = () => async dispatch => {\r\n  dispatch(getContactsReguests());\r\n  try {\r\n    const contactsGet = await getContactsApi();\r\n    dispatch(getContactsSuccess(contactsGet));\r\n  } catch (error) {\r\n    dispatch(getContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContacts =\r\n  ({ name, number, id }) =>\r\n  async dispatch => {\r\n    dispatch(addContactsReguests());\r\n    try {\r\n      const contactsAdd = await addContactsApi({ name, number, id });\r\n      dispatch(addContactsSuccess(contactsAdd));\r\n    } catch (error) {\r\n      dispatch(addContactsError(error));\r\n    }\r\n  };\r\n\r\nexport const deleteContacts = contactId => async dispatch => {\r\n  dispatch(deleteContactsReguests());\r\n  try {\r\n    await deleteContactsApi(contactId);\r\n    dispatch(deleteContactsSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactsError(error));\r\n  }\r\n};\r\n","import PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nfunction ContactListItem({ id, name, number, onDeleteContact }) {\n  return (\n    <li className={s.list__item}>\n      {name}: {number}\n      <button\n        className={s.list__btn}\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport { deleteContacts, getContacts } from '../../redux/operations';\nimport { getContactsFilter, getContactsList } from '../../redux/selectors';\n\nfunction ContactList() {\n  const filter = useSelector(getContactsFilter);\n  const contacts = useSelector(getContactsList);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {contacts\n        .filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\n        .map(({ name, id, number }) => (\n          <ContactListItem\n            key={id}\n            name={name}\n            number={number}\n            onDeleteContact={() => dispatch(deleteContacts(id))}\n          />\n        ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../redux/actions';\nimport { getContactsFilter } from '../../redux/selectors';\n\nconst Filter = () => {\n  const value = useSelector(getContactsFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={e => dispatch(actions.changeFilter(e.target.value))}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n\nfunction App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n//import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nimport App from './Components/App';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* <PersistGate loading={null} persistor={store.persistor}> */}\n    <App />\n    {/* </PersistGate> */}\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__REPcB\",\"form__input\":\"ContactForm_form__input__2avT9\",\"form__label\":\"ContactForm_form__label__3r5so\",\"form__btn\":\"ContactForm_form__btn__30T5w\"};"],"sourceRoot":""}